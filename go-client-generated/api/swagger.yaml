openapi: 3.0.3
info:
  title: Waras RESTful API
  description: OpenAPI for Waras RESTful API
  termsOfService: ""
  contact:
    name: ""
    url: ""
    email: ""
  license:
    name: APACHE 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0
  version: "1"
externalDocs:
  description: ""
  url: ""
servers:
- url: ""
  description: Waras RESTful API Server
  variables:
    environment:
      description: Server Environment
      enum:
      - dev
      - qa
      - prod
      default: dev
paths:
  /Waras:
    get:
      tags:
      - Waras
      summary: Get all Waras
      description: Get all active Waras by default
      parameters:
      - name: include_done
        in: query
        description: Is include done Waras
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          nullable: true
          default: false
      - name: name
        in: query
        description: Filter Waras by name
        required: false
        style: form
        explode: true
        schema:
          maxLength: 100
          minLength: 1
          type: string
          nullable: true
        example:
          express:
            description: Example name express
            value: express
      responses:
        "200":
          description: Success get all Waras
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArrayWaras'
              example:
                success:
                  description: Example success get all Waras
                  value:
                  - id: "1"
                    name: express
                    priority: 3
                    tag:
                    - express
      security:
      - WarasAuth: []
    post:
      tags:
      - Waras
      summary: Create new Waras
      description: Create new Waras to database
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrUpdateWaras'
            example:
              express:
                description: Example create Waras express
                value:
                  name: express
                  priority: 3
                  tag:
                  - express
        required: true
      responses:
        "200":
          description: Success create Waras
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Waras'
              example:
                express:
                  description: Success create express Waras
                  value:
                    id: "1"
                    name: express
                    priority: 3
                    tag:
                    - express
      security:
      - WarasAuth: []
  /Waras/{WarasId}:
    put:
      tags:
      - Waras
      summary: Update existing Waras
      description: Update existing Waras in database
      parameters:
      - name: WarasId
        in: path
        description: Waras id for updated
        required: true
        style: simple
        explode: false
        schema:
          maxLength: 100
          minLength: 1
          type: string
        example:
          express:
            description: Sample Waras id for express
            value: "1"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrUpdateWaras'
            example:
              express:
                description: Example create Waras express
                value:
                  name: express
                  priority: 3
                  tag:
                  - express
        required: true
      responses:
        "200":
          description: Success update Waras
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Waras'
              example:
                express:
                  description: Success create express Waras
                  value:
                    id: "1"
                    name: express
                    priority: 3
                    tag:
                    - express
      security:
      - WarasAuth: []
    delete:
      tags:
      - Waras
      summary: Delete existing Waras
      description: Delete existing Waras in database
      parameters:
      - name: WarasId
        in: path
        description: Waras id for updated
        required: true
        style: simple
        explode: false
        schema:
          maxLength: 100
          minLength: 1
          type: string
        example:
          express:
            description: Sample Waras id for express
            value: "1"
      responses:
        "200":
          description: Success delete Waras
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200'
              example:
                success:
                  description: Success delete Waras
                  value:
                    success: true
        "404":
          description: Failed delete not found Waras
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200'
              example:
                failed:
                  description: Failed delete Waras
                  value:
                    success: false
      security:
      - WarasAuth: []
components:
  schemas:
    Waras:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        priority:
          type: number
          format: int32
        tags:
          type: array
          items:
            type: string
      example:
        name: name
        id: id
        priority: 0.80082819046101150206595775671303272247314453125
        tags:
        - tags
        - tags
    CreateOrUpdateWaras:
      type: object
      properties:
        name:
          type: string
        priority:
          type: number
          format: int32
        tags:
          type: array
          items:
            type: string
    ArrayWaras:
      type: array
      items:
        $ref: '#/components/schemas/Waras'
      x-schema-name: ArrayWaras
    inline_response_200:
      type: object
      properties:
        success:
          type: boolean
      example:
        success: true
  parameters:
    WarasId:
      name: WarasId
      in: path
      description: Waras id for updated
      required: true
      style: simple
      explode: false
      schema:
        maxLength: 100
        minLength: 1
        type: string
      example:
        express:
          description: Sample Waras id for express
          value: "1"
  securitySchemes:
    WarasAuth:
      type: apiKey
      description: Authentication for Waras RESTful API
      name: X-API-Key
      in: header
